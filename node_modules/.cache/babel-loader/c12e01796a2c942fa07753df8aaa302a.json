{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Onboarding/Coding/react-recipe-app/src/RecipeEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport useInputState from \"./hooks/useInputState\";\nimport useDynamicInputState from \"./hooks/useDynamicInputState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RECIPE_URL = \"http://localhost:8000/recipe/recipes/\";\n\nfunction RecipeEdit() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const currState = useLocation().state;\n  const currRecipeId = id;\n  const [recipe, setRecipe] = useState();\n  const [isLoading, setLoading] = useState(true);\n  let navigate = useNavigate();\n  const [name, nameChange, nameReset] = useInputState(\"\");\n  const [description, descriptionChange, descriptionReset] = useInputState(\"\");\n  const [ingredients, ingredientsChange, addIngredientField, removeIngredientField, ingredientsReset] = useDynamicInputState([{\n    \"name\": \"\"\n  }]);\n  useEffect(() => {\n    if (currState) {\n      var recipeToEdit = currState.recipe;\n      setRecipe(recipeToEdit);\n      setFormValues(recipe);\n      setLoading(false);\n    } else {\n      async function getRecipeInfo() {\n        var url = `${RECIPE_URL}${currRecipeId}/`;\n        const response = await axios.get(url);\n        setRecipe(response.data);\n        setFormValues(recipe);\n        setLoading(false);\n      }\n\n      ;\n      getRecipeInfo();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  let handleSubmit = event => {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [formValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: element.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: element.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingredients: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), element.ingredients.map((ing, ingIndex) => /*#__PURE__*/_jsxDEV(\"input\", {}, 'ingredient-' + ingIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button add\",\n        type: \"button\",\n        onClick: () => addIngredientField(),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button submit\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RecipeEdit, \"RTxLrA6QziD05D4PFdoZm+aA25k=\", false, function () {\n  return [useParams, useLocation, useNavigate, useInputState, useInputState, useDynamicInputState];\n});\n\n_c = RecipeEdit;\nexport default RecipeEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeEdit\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","useNavigate","useParams","useInputState","useDynamicInputState","RECIPE_URL","RecipeEdit","id","currState","state","currRecipeId","recipe","setRecipe","isLoading","setLoading","navigate","name","nameChange","nameReset","description","descriptionChange","descriptionReset","ingredients","ingredientsChange","addIngredientField","removeIngredientField","ingredientsReset","recipeToEdit","setFormValues","getRecipeInfo","url","response","get","data","handleSubmit","event","preventDefault","alert","JSON","stringify","formValues","map","element","index","ing","ingIndex"],"sources":["/home/user/Documents/Onboarding/Coding/react-recipe-app/src/RecipeEdit.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport useInputState from \"./hooks/useInputState\";\nimport useDynamicInputState from \"./hooks/useDynamicInputState\";\n\nconst RECIPE_URL = \"http://localhost:8000/recipe/recipes/\";\n\nfunction RecipeEdit() {\n    let { id } = useParams();\n    const currState = useLocation().state;\n    const currRecipeId = id;\n    const[recipe, setRecipe] = useState();\n    const [isLoading, setLoading] = useState(true);\n    let navigate = useNavigate();\n    const [name, nameChange, nameReset] = useInputState(\"\")\n    const [description, descriptionChange, descriptionReset] = useInputState(\"\")\n    const [ingredients, ingredientsChange, addIngredientField, removeIngredientField, ingredientsReset] = useDynamicInputState([{\"name\":\"\"}])\n\n    useEffect(() => {\n        if(currState) {\n            var recipeToEdit = currState.recipe;\n            setRecipe(recipeToEdit);\n            setFormValues(recipe);\n            setLoading(false);\n        } else {\n            async function getRecipeInfo() {\n                var url = `${RECIPE_URL}${currRecipeId}/`;\n                const response = await (axios.get(url));\n                setRecipe(response.data);\n                setFormValues(recipe);\n                setLoading(false);\n            };\n            getRecipeInfo();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            {formValues.map((element, index) => (\n                <div key={index}>\n                    <label>Name: </label>\n                    <input type=\"text\" defaultValue={element.name} />\n                    <br/>\n\n                    <label>Description: </label>\n                    <input type=\"text\" defaultValue={element.description} />\n                    <br/>\n\n                    <label>Ingredients: </label>\n                    {element.ingredients.map((ing, ingIndex) => (\n                        <input key={'ingredient-'+ingIndex}/>\n                    ))}\n                    <br/>\n                </div>\n            ))}\n            <div className=\"button-section\">\n              <button className=\"button add\" type=\"button\" onClick={() => addIngredientField()}>Add</button>\n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n    );\n}\n\nexport default RecipeEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module"}